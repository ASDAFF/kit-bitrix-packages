$class: 'intec-ui' !default;
$attribute: 'data-ui' !default;
$schemes: () !default;
$sizes: 5 !default;
$controls-button-rounds: 5 !default;

&-button {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding: 4px 12px;
  border: 2px solid #f7f7f7;
  background-color: #f7f7f7;
  color: #5f5f5f;
  text-decoration: none;
  text-align: center;
  cursor: pointer;

  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;

  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;

  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;

  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;

  -webkit-transition-property: color, border-color, background-color;
  -moz-transition-property: color, border-color, background-color;
  -ms-transition-property: color, border-color, background-color;
  -o-transition-property: color, border-color, background-color;
  transition-property: color, border-color, background-color;

  -webkit-transition-duration: 350ms;
  -moz-transition-duration: 350ms;
  -ms-transition-duration: 350ms;
  -o-transition-duration: 350ms;
  transition-duration: 350ms;

  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;

  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  // Modifiers

  &.#{$class}-mod-block {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
  }

  &.#{$class}-mod-round-none {
    border-radius: 0;
  }

  @for $controls-button-round from 1 through $controls-button-rounds {
    &.#{$class}-mod-round-#{$controls-button-round} {
      border-radius: #{$controls-button-round}px;
    }
  }

  &.#{$class}-mod-round-half {
    border-radius: 16px;
  }

  &.#{$class}-mod-transparent {
    &, &:disabled, &.#{$class}-state-disabled, &[#{$attribute}-state="disabled"] {
      background-color: transparent;
    }
  }

  // States

  &:hover,
  &.#{$class}-state-hover,
  &[#{$attribute}-state="hover"] {
    border-color: #ebebeb;
    background-color: #ebebeb;
    color: #3f3f3f;
  }

  &:focus,
  &.#{$class}-state-focus,
  &[#{$attribute}-state="focus"] {
    border-color: #ebebeb;
    background-color: #ebebeb;
    color: #3f3f3f;
  }

  &:active,
  &.#{$class}-state-active,
  &[#{$attribute}-state="active"] {
    border-color: #dfdfdf;
    background-color: #dfdfdf;
    color: #3f3f3f;
  }

  &:disabled,
  &.#{$class}-state-disabled,
  &[#{$attribute}-state="disabled"] {
    border-color: #f7f7f7;
    background-color: #f7f7f7;
    color: #9f9f9f;
  }

  // Modifiers

  &.#{$class}-mod-link {
    border-color: transparent;
    background-color: transparent;
  }

  // Content

  & > * {
    width: auto;
    max-width: none;

    -webkit-box-flex: 0;
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;

    -ms-flex-negative: 1;
    -webkit-flex-shrink: 1;
    -moz-flex-shrink: 1;
    -ms-flex: auto;
    flex-shrink: 1;

    & + * {
      padding-left: 0.714286em;
    }
  }

  .#{$class}-part-icon,
  .#{$class}-part-content {
    display: block;
    position: relative;

    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }

  .#{$class}-part-icon {
    white-space: nowrap;

    -ms-flex-negative: 0;
    -webkit-flex-shrink: 0;
    -moz-flex-shrink: 0;
    -ms-flex: auto;
    flex-shrink: 0;
  }

  .#{$class}-part-content {}

  // Schemes

  @each $scheme-name, $scheme-values in $schemes {
    &.#{$class}-scheme-#{$scheme-name} {
      border-color: map-get(map-get($scheme-values, 'default'), 'border');
      background-color: map-get(map-get($scheme-values, 'default'), 'background');
      color: map-get(map-get($scheme-values, 'default'), 'color');

      &.#{$class}-mod-transparent {
        background-color: transparent;
        color: map-get(map-get($scheme-values, 'default'), 'background');
      }

      &:hover,
      &.#{$class}-state-hover,
      &[#{$attribute}-state="hover"] {
        border-color: map-get(map-get($scheme-values, 'hover'), 'border');
        background-color: map-get(map-get($scheme-values, 'hover'), 'background');
        color: map-get(map-get($scheme-values, 'hover'), 'color');
      }

      &:focus,
      &.#{$class}-state-focus,
      &[#{$attribute}-state="focus"] {
        border-color: map-get(map-get($scheme-values, 'focus'), 'border');
        background-color: map-get(map-get($scheme-values, 'focus'), 'background');
        color: map-get(map-get($scheme-values, 'focus'), 'color');
      }

      &:active,
      &.#{$class}-state-active,
      &[#{$attribute}-state="active"] {
        border-color: map-get(map-get($scheme-values, 'active'), 'border');
        background-color: map-get(map-get($scheme-values, 'active'), 'background');
        color: map-get(map-get($scheme-values, 'active'), 'color');
      }

      &:disabled,
      &.#{$class}-state-disabled,
      &[#{$attribute}-state="disabled"] {
        border-color: map-get(map-get($scheme-values, 'disabled'), 'border');
        background-color: map-get(map-get($scheme-values, 'disabled'), 'background');
        color: map-get(map-get($scheme-values, 'disabled'), 'color');
      }

      &.#{$class}-mod-link {
        color: #5f5f5f;
        border-color: transparent;
        background-color: transparent;

        &:hover,
        &.#{$class}-state-hover,
        &[#{$attribute}-state="hover"] {
          color: map-get(map-get($scheme-values, 'hover'), 'background');
        }

        &:focus,
        &.#{$class}-state-focus,
        &[#{$attribute}-state="focus"] {
          color: map-get(map-get($scheme-values, 'focus'), 'background');
        }

        &:active,
        &.#{$class}-state-active,
        &[#{$attribute}-state="active"] {
          color: map-get(map-get($scheme-values, 'active'), 'background');
        }

        &:disabled,
        &.#{$class}-state-disabled,
        &[#{$attribute}-state="disabled"] {
          color: #9f9f9f;
        }
      }
    }
  }

  // Sizes

  @for $size from 1 through $sizes {
    &.#{$class}-size-#{$size} {
      padding: #{4 + (2 * $size) - (sizes-font-additional($size) / 2)}px #{12 + (4 * $size)}px;

      &.#{$class}-mod-round-half {
        border-radius: #{16 + (2 * $size)}px;
      }
    }
  }
}