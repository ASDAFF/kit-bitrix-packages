!function(api){var $=api.$,block;block=function(){var block,db,eb,kb,lb,qb;block=this,block.models=function(){var models,a,b,h,i,Xa;return models={},models.resolution=((b=(a=function(e){var t;t=this,e=api.isObject(e)?e:{},a.trigger("create",t,e),t.width=ko.observable(api.toInteger(e.width)),t.width.subscribe(function(){block.resolutions.order()}),t.height=ko.observable(api.toInteger(e.height)),t.value=ko.computed(function(){return t.width()+"x"+t.height()}),t.gadget=ko.computed(function(){var e;return(e=t.width())<576?"mobile":e<992?"tablet":"desktop"}),a.trigger("created",t,e)}).prototype).isAvailable=function(){return block.resolutions.has(this)},b.select=function(){block.resolutions.selected(this)},b.isSelected=function(){return block.resolutions.selected()===this},b.save=function(){var e;return e={width:this.width(),height:this.height()},a.trigger("save",this,e),e},a.is=function(e){return e instanceof a},api.extend(a,api.ext.events(block)),a),models.element=((i=(h=function(e){var t,n,o,i,r,s,l,u;t=this,i=!1,e=api.isObject(e)?e:{},h.trigger("create",t,e),n={},(o={}).attribute={},o.attribute.change=function(e,n){h.trigger("attributeChange",t,e,n)},t.code=ko.computed(function(){return e.code}),t.type=ko.computed(function(){return block.elements.types.get(t.code())}),t.order=ko.observable(e.order),t.order.subscribe(function(){block.elements.order()}),t.attributes=function(e){var t,o;return models.resolution.is(e)||!1===e||(e=block.resolutions.selected()),models.resolution.is(e)||(e=null),o=null!=e?e.width():"*",t=n[o],null==(t=api.isObject(t)?t:null)&&(t={},n[o]=t),t},t.attribute=function(e,n){var r,s,l,u,a;return models.resolution.is(n)||!1===n||(n=block.resolutions.selected()),r=t.attributes(n),models.resolution.is(n)||(n=null),s=null,null!=r&&(s=r[e],ko.isObservable(s)||(s=null),null==s&&((s=ko.observable()).subscribe(function(t){o.attribute.change(e,t,n,s)}),s.subscribe=(s.subscribe,u=s.subscribe,l=[],(a=function(){var e;return e=u.apply(s,arguments),i&&l.push(u),e}).clear=function(){api.each(l,function(e,t){t.dispose()}),l=[]},a),r[e]=s)),s},t.getAttributes=function(e){var n,o;return n=t.attributes(e),o={},null!=n&&api.each(n,function(e,t){o[e]=t()}),o},t.getAttribute=function(e,n){var o;return null!=(o=t.attribute(e,n))&&(o=o()),o},t.setAttributes=function(e,n){api.each(e,function(e,o){t.attribute(e,n)(o)})},t.setAttribute=function(e,n,o){var i;null!=(i=t.attribute(e,o))&&i(n)},h.trigger("init",t,e),s=ko.observableArray([]),r=function(e){var t;models.resolution.is(e)&&(s.has(e)||(e.width.subscribe(function(e){t=e},null,"beforeChange"),e.width.subscribe(function(e){t!=e&&api.isObject(n[t])&&(n[e]=n[t],n[t]=void 0)},null),s.push(e)))},l=function(e){null!=t.type()&&(api.isArray(e)||(e=[!1],api.each(block.resolutions(),function(t,n){e.push(n)})),i=!0,api.each(e,function(e,n){var o,i,r,s;(o=t.attribute("display",n)).type(api.type.boolean),u&&o(!0),!1===n&&((o=t.attribute("locked",n)).type(api.type.boolean),u&&o(!1)),(o=t.attribute("indents",n)).type(api.type.boolean),u&&o(!1),r=ko.observableArray(["grid","window"]),(i=t.attribute("container",n)).filter(function(e){r.indexOf(e)<0&&this(r()[0])}),s=i(),i(api.isUndefined(s)?null:s),api.each(["x","y","width","height","indentTop","indentBottom","indentLeft","indentRight"],function(e,o){var i,r,s,l;r=ko.observableArray(["px","%"]),(i=t.attribute(o,n)).measure=t.attribute(o+"Measure",n),i.measure.filter(function(e){r.indexOf(e)<0&&this(r()[0])}),i.measures=ko.computed(function(){return r()}),i.type(api.type.float,"x"!==o&&"y"!==o),l=i(),i(api.isUndefined(l)?null:l),s=i.measure(),i.measure(api.isUndefined(s)?null:s),i.summary=ko.computed(function(){var e,t;return e=i(),t=i.measure(),null===e?null:e+t})}),api.each(["xAxis","yAxis"],function(e,o){var i,r,s;r="xAxis"===o?ko.observableArray(["left","center","right"]):ko.observableArray(["top","center","bottom"]),(i=t.attribute(o,n)).filter(function(e){r.indexOf(e)<0&&this(r()[0])}),s=i(),i(api.isUndefined(s)?null:s)}),t.type().settings.model(t,n,u)}),i=!1)},api.each(block.resolutions(),function(e,t){r(t)}),block.resolutions.subscribe(function(e){api.each(e,function(e,t){if("added"===t.status&&api.isUndefined(t.moved)){var n,o=t.value,i=null;r(o),u=!0,l([o]),u=!1,(n=block.resolutions()).sort(function(e,t){return e.width()-t.width()}),api.each(n,function(e,t){return t===o||(i=t,!(t.width()>o.width())&&void 0)}),console.log(i.width()),console.log(o.width()),null!==i&&api.each(block.elements(),function(e,t){t.setAttributes(t.getAttributes(i),o)})}})},null,"arrayChange"),u=!0,l(),u=!1,api.each(e.attributes,function(e,n){e="*"!==e&&block.resolutions.get(e),t.setAttributes(n,e)}),h.trigger("created",t,e)}).prototype).isAvailable=function(){return block.elements.has(this)},i.layerUpEnd=function(){this.order(block.elements().length+.5)},i.layerUp=function(){this.order(this.order()+1.5)},i.layerDown=function(){this.order(this.order()-1.5)},i.layerDownEnd=function(){this.order(-.5)},i.copy=function(){block.elements.push(new h(this.save()))},i.remove=function(){block.elements.remove(this)},i.save=function(){var e,t;return(t={}).code=(e=this).code(),t.order=e.order(),t.attributes={},t.attributes["*"]=e.getAttributes(!1),api.each(block.resolutions(),function(n,o){t.attributes[o.width()]=e.getAttributes(o)}),h.trigger("save",this,t),t},h.is=function(e){return e instanceof h},api.extend(h,api.ext.events(block)),h),models.element.type=function(){var model;return model=function(data){var self;self=this,data=api.isObject(data)?data:{},model.trigger("create",self,data),self.name=ko.computed(function(){return data.name}),self.code=ko.computed(function(){return data.code}),self.icon=ko.computed(function(){return data.icon}),self.view=ko.computed(function(){return data.view}),self.settings={},self.settings.view=ko.computed(function(){return data.settings.view}),self.settings.model=function(element,resolution,defaults){eval("(function (resolution, defaults, constructor, self, data, model, block) {"+data.settings.model+"})").call(element,resolution,defaults,block)},model.trigger("created",self,data)},model.is=function(e){return e instanceof model},api.extend(model,api.ext.events(block)),model}(),models.property={},models.property.measured=((Xa=function(e,t,n){var o;o=this,n=api.isArray(n)?n:[],Xa.trigger("create",o,e,t,n),n=ko.observableArray(n),o.value=ko.observable(e),o.measure=ko.observable(),o.measure.filter(function(e){n.indexOf(e)<0&&this(null)}),o.measure.subscribe(function(){o.value.valueHasMutated()}),o.measure(t),o.summary=ko.computed(function(){return api.isDeclared(o.value())?o.value()+o.measure():null}),o.measures=ko.computed(function(){return n()}),Xa.trigger("created",o,e,t,n)}).prototype.is=function(e){return e instanceof Xa},api.extend(Xa,api.ext.events(block)),Xa),models}(),block.resolutions=((db=ko.observableArray([])).selected=ko.observable(null),db.subscribe(function(){null!==db.selected()&&(db.has(db.selected())||db.selected(null))}),db.subscribe(function(){eb||db.order()}),db.get=function(e){return block.resolutions.findOne(function(t,n){return n.width()==e})},db.order=function(){eb||(eb=!0,db.sort(function(e,t){return e.width()==t.width()?0:e.width()<t.width()?-1:1}),eb=!1)},db),block.elements=((kb=ko.observableArray([])).subscribe(function(){lb||kb.order()}),kb.order=function(){lb||(lb=!0,kb.sort(function(e,t){return e.order()==t.order()?0:e.order()<t.order()?-1:1}),api.each(kb(),function(e,t){t.order(e)}),lb=!1)},kb),block.elements.types=((qb=ko.observableArray([])).get=function(e){return qb.findOne(function(t,n){return n.code()===e})},qb),block.load=function(e){e=api.isObject(e)?e:{},api.each(e.resolutions,function(e,t){t=new block.models.resolution(t),block.resolutions.push(t)}),block.resolutions().length>0&&block.resolutions()[block.resolutions().length-1].select(),api.each(e.elements.types,function(e,t){block.elements.types.push(new block.models.element.type(t))}),api.each(e.elements.list,function(e,t){null!=(t=new block.models.element(t)).type()&&block.elements.push(t)}),block.trigger("load",e)},block.save=function(){var e;return(e={}).resolutions=[],e.elements=[],api.each(block.resolutions(),function(t,n){e.resolutions.push(n.save())}),api.each(block.elements(),function(t,n){e.elements.push(n.save())}),block.trigger("save",e),e},block.isResolution=function(e){return block.models.resolution.is(e)},block.isElement=function(e){return block.models.element.is(e)},block.isElementType=function(e){return block.models.element.type.is(e)},api.extend(block,api.ext.events(block))},window.block=function(){return new block}}(intec);